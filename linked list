#include<bits/stdc++.h>
using namespace std;

struct node
{
int x;
int y;
struct nod`e *ptr;
};

struct node *createnode()
{
    struct node *temp;
temp = (struct node *) malloc(sizeof(struct
node));
return temp;
};

void addfirst(struct node **str,int a,int b)
{
    struct node *newnode;
    newnode=createnode();
    newnode->x=a;
    newnode->y=b;
    newnode->ptr=*str;
    *str=newnode;
};

void deletefirst(struct node **str)
{
    if(*str==NULL) return;
    struct node *temp;
    temp=*str;
    *str=(*str)->ptr;
    free(temp);
};

void del(struct node **str,int a,int b)
{
    struct node *prev,*temp;
    prev=NULL;
        temp=*str;
        while(temp!=NULL)
        {
            if(temp->x==a&&temp->y==b)
            {
                prev->ptr=temp->ptr;
                free(temp);
                break;
            }
            else
            {
                prev=temp;
                temp=temp->ptr;
            }
        }
};

void Search(struct node **str,int d)
{
    struct node *temp;
    temp=*str;
    while(temp!=NULL)
    {
        int dist=sqrt((temp->x)*(temp->x)+(temp->y)*(temp->y));
        if(dist<=d)
        {
            cout<<"("<<temp->x<<","<<temp->y<<")";
        }
        temp=temp->ptr;
    }
    cout<<endl;
};

void Find(struct node **str,int a,int b)
{
    struct node *temp;
    temp=*str;
    while(temp!=NULL)
    {
        if((temp->x==a)&&(temp->y==b))
        {
            cout<<"true"<<endl;
            break;
        }
        temp=temp->ptr;
    }
    if(temp==NULL) {cout<<"false"<<endl;}

};

void length(struct node **str)
{
    struct node *temp;
    temp=*str;
    int i=0;
    while(temp!=NULL)
    {
        i++;
        temp=temp->ptr;
    }
    cout<<i<<endl;
};
int main()
{
   struct node *str;
   str=NULL;
   int i;

   do
   {
       cin>>i;
       if(i==0) break;
        if(i==1)
       {
           int a,b;
           cin>>a>>b;
           addfirst(&str,a,b);
       }

        if(i==2)
       {

           deletefirst(&str);
       }

        if(i==3)
       {
           int a,b;
           cin>>a>>b;
           del(&str,a,b);
       }

       if(i==4)
       {
           int d;
           cin>>d;
           Search(&str,d);
       }

        if(i==5)
       {
           int a,b;
           cin>>a>>b;
           Find(&str,a,b);
       }

        if(i==6)
       {
           length(&str);
       }
   }
   while(i!=0);
   return 0;
}
